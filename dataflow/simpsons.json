{
	"name": "simpsons",
	"properties": {
		"folder": {
			"name": "Simpsons_flow"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "entrada_characters",
						"type": "DatasetReference"
					},
					"name": "characters"
				},
				{
					"dataset": {
						"referenceName": "entrada_episodes",
						"type": "DatasetReference"
					},
					"name": "episodes"
				},
				{
					"dataset": {
						"referenceName": "entrada_locations",
						"type": "DatasetReference"
					},
					"name": "locations"
				},
				{
					"dataset": {
						"referenceName": "entrada_scripts",
						"type": "DatasetReference"
					},
					"name": "scripts"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "salida_characters",
						"type": "DatasetReference"
					},
					"name": "salidacharacters"
				},
				{
					"dataset": {
						"referenceName": "salida_episodes_scripts",
						"type": "DatasetReference"
					},
					"name": "salidaepisodesscripts"
				},
				{
					"dataset": {
						"referenceName": "salida_locations",
						"type": "DatasetReference"
					},
					"name": "salidalocations"
				}
			],
			"transformations": [
				{
					"name": "selectcharacters"
				},
				{
					"name": "filtergenerosNull"
				},
				{
					"name": "selectepisodes"
				},
				{
					"name": "selectlocations"
				},
				{
					"name": "selectscripts"
				},
				{
					"name": "episodescripts"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as integer,",
				"          name as string,",
				"          normalized_name as string,",
				"          gender as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> characters",
				"source(output(",
				"          id as integer,",
				"          image_url as string,",
				"          imdb_rating as string,",
				"          imdb_votes as string,",
				"          number_in_season as string,",
				"          number_in_series as string,",
				"          original_air_date as date,",
				"          original_air_year as string,",
				"          production_code as string,",
				"          season as integer,",
				"          title as string,",
				"          us_viewers_in_millions as string,",
				"          video_url as string,",
				"          views as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> episodes",
				"source(output(",
				"          id as integer,",
				"          name as string,",
				"          normalized_name as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> locations",
				"source(output(",
				"          id as integer,",
				"          episode_id as integer,",
				"          number as integer,",
				"          raw_text as string,",
				"          timestamp_in_ms as string,",
				"          speaking_line as string,",
				"          character_id as integer,",
				"          location_id as integer,",
				"          raw_character_text as string,",
				"          raw_location_text as string,",
				"          spoken_words as string,",
				"          normalized_text as string,",
				"          word_count as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> scripts",
				"characters select(mapColumn(",
				"          id,",
				"          nombre = normalized_name,",
				"          genero = gender",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectcharacters",
				"selectcharacters filter(genero!=\"Null\") ~> filtergenerosNull",
				"episodes select(mapColumn(",
				"          id,",
				"          imdb_rating,",
				"          imdb_votes,",
				"          number_in_season,",
				"          number_in_series,",
				"          original_air_year,",
				"          season,",
				"          title,",
				"          views",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectepisodes",
				"locations select(mapColumn(",
				"          id,",
				"          nombre = normalized_name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectlocations",
				"scripts select(mapColumn(",
				"          id,",
				"          episode_id,",
				"          number,",
				"          raw_text,",
				"          timestamp_in_ms,",
				"          speaking_line,",
				"          character_id,",
				"          location_id,",
				"          raw_character_text,",
				"          raw_location_text,",
				"          spoken_words,",
				"          normalized_text,",
				"          word_count",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectscripts",
				"selectepisodes, selectscripts join(selectepisodes@id == episode_id,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> episodescripts",
				"filtergenerosNull sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          peli_id as string,",
				"          titulo as string,",
				"          fecha_estreno as string,",
				"          fecha_lan_vid as string,",
				"          imdb_url as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> salidacharacters",
				"episodescripts sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          peli_id as string,",
				"          titulo as string,",
				"          fecha_estreno as string,",
				"          fecha_lan_vid as string,",
				"          imdb_url as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> salidaepisodesscripts",
				"selectlocations sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          peli_id as string,",
				"          titulo as string,",
				"          fecha_estreno as string,",
				"          fecha_lan_vid as string,",
				"          imdb_url as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> salidalocations"
			]
		}
	}
}